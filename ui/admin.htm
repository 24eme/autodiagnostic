<div id="administration-title">
  <div class="p-5">
    <div class="container-fluid">
      <h1 class="text-center display-5 fw-bold"><i class="bi-shield-lock"></i> Administration</h1>
    </div>
  </div>
</div>

<div id="administration-content" class="container">
  <check if="{{ @SESSION.flash }}">
  <div class="text-center">
    <div class="mb-5 alert alert-danger d-flex align-items-center" role="alert">
      <div class="border-end me-3">
        <i class="fs-2 bi-x-circle-fill"></i>
      </div>
      <div>
        {{ @SESSION.flash }}
      </div>
    </div>
  </div>
  </check>

  <div class="g-5 tabs">
    <ul class="nav nav-pills nav-fill mb-5">
      <li class="nav-item">
        <a class="nav-link active" href="#" data-tab="administration-questions">Liste des questions</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="#" data-tab="administration-listing">Tous les résultats</a>
      </li>
    </ul>

    <div id="administration-listing" class="tab">
      <h3 class="display-6 mb-5">Tous les résultats</h3>
      <check if="{{ @reponses }}">
        <true>
          <repeat group="{{ @reponses }}" value="{{ @name }}">
          <p class="border-bottom">{{ @name }} <a href="#" class="float-end">Voir les réponses</a></p>
          </repeat>
        </true>
        <false><p class="lead text-center"><i class="bi-folder-x"></i> Aucun résultat</p></false>
      </check>
    </div>

    <div id="administration-questions" class="tab active">
      <h3 class="display-6 mb-5">Liste des questions</h3>
      <table class="table">
        <thead>
          <tr>
            <th>Categorie</th>
            <th>Question</th>
          </tr>
        </thead>
        <tbody>
          <repeat group="{{ @questionnaire->getQuestionnaire() }}" key="{{ @categorie }}" value="{{ @questions }}">
            <repeat group="{{ @questions }}" value="{{ @question }}" counter="{{ @ctr }}">
              <tr>
                <check if="{{ @ctr === 1 }}">
                  <true>
                    <th scope="row" rowspan="{{ count(@questions) }}">{{ @questions[@categorie].libelle }}</th>
                  </true>
                  <false><td>{{ @question.libelle }}<span class="float-end modal-open" title="Plus d'info sur la question" data-modal="modal-{{ @categorie }}-{{ @question.id }}"><i class="bi-eye"></i></span></td></false>
                </check>
              </tr>
            </repeat>
          </repeat>
        </tbody>
      </table>
    </div>
  </div>
</div>

<div id="administration-modals">
  <repeat group="{{ @questionnaire->getQuestionnaire() }}" key="{{ @categorie }}" value="{{ @questions }}">
    <repeat group="{{ @questions }}" value="{{ @question }}" counter="{{ @ctr }}">
      <check if="{{ @ctr !== 1 }}">
        <div class="modal fade" tabindex="-1" id="modal-{{ @categorie }}-{{ @question.id }}">
          <div class="modal-dialog modal-xl">
            <div class="modal-content">
              <div class="modal-body">
                <h5>
                  <i class="bi {{ @questionnaire->getQuestionIcon(@question.id) }} me-1"
                    title="{{ @questionnaire->getQuestionType(@question.id) }}"></i>
                  {{ @question.libelle }}
                </h5>
                <hr style="width: 25%;">
                <p class="h-100 p-3 bg-light border position-relative">
                  {{ @questionnaire->getQuestionAide(@question.id) }}
                  <span class="position-absolute me-2 end-0 bottom-0 opacity-25 fs-6">Aide</span>
                </p>

                <check if="{{ @questionnaire->hasReponses(@question.id) }}">
                  <h6 class="mb-0 text-decoration-underline">Réponses : </h6>
                  <table class="table table-striped">
                    <thead><tr><th scope="col">Réponse</th><th scope="col">Réponse(s) auto.</th></tr></thead>
                    <tbody>
                      <repeat group="{{ @questionnaire->getReponses(@question.id) }}" value="{{ @reponse }}">
                        <tr>
                          <td>{{ @reponse.libelle }}</td>
                          <check if="{{ @questionnaire->hasReponsesAutomatiques(@question.id) }}">
                            <true>
                              <td>
                              <repeat group="{{ @questionnaire->getReponsesAutomatiques(@question.id)[@reponse.libelle] }}" key="{{ @id }}" value="{{ @value }}">
                                <p>{{ @questionnaire->find(@id)['libelle'] }} : {{ @value }}</p>
                              </repeat>
                              </td>
                            </true>
                            <false><td>-</td></false>
                          </check>
                        </tr>
                      </repeat>
                    </tbody>
                  </table>
                </check>

                <check if="{{ @questionnaire->hasNotation(@question.id) }}">
                  <div class="mb-1">
                    <h6 class="mb-0 text-decoration-underline">Notation :</h6>
                      <repeat group="{{ @questionnaire->getNotation(@question.id) }}" key="{{ @comparateur }}" value="{{ @notes }}">
                        <p>Si la valeur est <strong>
                          <check if="{{ @comparateur === 'EQ' }}">
                            égale
                          </check>
                          <check if="{{ @comparateur === 'LTE' }}">
                            inférieure
                          </check>
                          <check if="{{ @comparateur === 'GTE' }}">
                            supérieure
                          </check>
                        </strong> à :
                        <table class="table table-striped">
                        <repeat group="{{ @notes }}" key="{{ @note }}" value="{{ @points }}">
                          <tr><td title="{{ @points.bilan_phrase }}">
                          {{ @note }} alors, le score est de {{ @points.score }} avec un poids de {{ @points.bilan_poids }}
                          </td></tr>
                        </repeat>
                        </table>
                      </repeat>
                  </div>
                </check>
              </div>
              <div class="modal-footer">
                <p class="me-auto"><small class="text-muted">ID: {{ @question.id }}</small></p>
                <button type="button" class="btn btn-secondary modal-close">Fermer</button>
              </div>
            </div>
          </div>
        </div>
      </check>
    </repeat>
  </repeat>
</div>
<div class="modal-backdrop fade show" id="backdrop" style="display: none;"></div>

<script>
  const modals = document.getElementById('administration-modals')
  const questions = document.getElementById('administration-questions')
  const listing = document.getElementById('administration-listing')
  const backdrop = document.getElementById('backdrop')

  const tabs_trigger = document.getElementsByClassName('nav-link') || [];
  const tabs = [questions, listing]

  questions.addEventListener('click', function (e) {
    for (let target = e.target; target && target !== this; target = target.parentNode) {
        if (target.matches('.modal-open')) {
          openModal.call(target, e)
        }
    }
  })

  Array.prototype.forEach.call(tabs_trigger, function (tab) {
    tab.addEventListener('click', function (e) {
      displayTab(e.target)
    })
  })

  modals.addEventListener('click', function (e) {
    for (let target = e.target; target && target !== this; target = target.parentNode) {
        if (target.matches('.modal-close')) {
          closeModal.call(target, e)
        }
    }
  })

  function openModal(target, event) {
    const id = target.target.parentNode.dataset.modal
    const modal = document.getElementById(id)
    modal.classList.add('show')
    modal.style.display = 'block';
    backdrop.style.display = 'block';
  }

  function closeModal(target, event) {
    let parent = target.target.parentNode
    while (parent.classList.contains('modal') !== true) {
      parent = parent.parentNode
    }

    const modal = document.getElementById(parent.id)
    modal.classList.remove('show')
    modal.style.display = 'none';
    backdrop.style.display = 'none';
  }

  function displayTab(trigger) {
    tabs.forEach(function (t) {
      t.classList.remove('active')
    })

    Array.prototype.forEach.call(tabs_trigger, function (t) {
      t.classList.remove('active')
    })

    const tab = document.getElementById(trigger.dataset.tab)
    tab.classList.add('active')
    trigger.classList.add('active')
  }
</script>
